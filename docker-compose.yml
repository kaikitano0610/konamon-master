# konamon-master/docker-compose.yml
version: '3.8'

services:
  db:
    image: mysql:8.4
    container_name: konamon_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      TZ: Asia/Tokyo
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      # プロジェクトルート(konamon-master)をビルドの基準点にします
      context: .
      # ビルドに使うDockerfileのパスを明示的に指定します
      dockerfile: ./backend/Dockerfile
    container_name: konamon_backend
    ports:
      - "5001:5000"
    volumes: # ホストPCのコード変更をコンテナに即座に反映（開発用）
      - .:/code
    working_dir: /code # コンテナ内での作業場所を/codeに設定します
    env_file: # プロジェクトルートにある .env.backend を読み込む
      - ./.env.backend # .env.backendはプロジェクトルートにあるので、./で指定
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend # frontend/Dockerfileがあるディレクトリ
      dockerfile: Dockerfile
    container_name: konamon_frontend
    ports:
      - "3000:3000"
    volumes: # ホストPCのコード変更をコンテナに即座に反映（開発用）
      - ./frontend:/app
      - /app/node_modules # node_modulesはコンテナ内で管理し、ホストからはマウントしない
    env_file: # プロジェクトルートにある .env.frontend を読み込む
      - ./.env.frontend # .env.frontendはプロジェクトルートにあるので、./で指定
    depends_on:
      - backend # フロントエンドはバックエンドAPIの準備を待つように指定

volumes:
  dbdata: